// generated by rust-bindgen 0.57.0, hacked down manually


#[derive(Debug, Copy, Clone)]
pub struct AcmiTapeHeader {
    pub file_id: i32,
    pub file_size: i32,
    pub num_entities: i32,
    pub num_feat: i32,
    pub entity_block_offset: i32,
    pub featBlockOffset: i32,
    pub numEntityPositions: i32,
    pub timelineBlockOffset: i32,
    pub firstEntEventOffset: i32,
    pub firstGeneralEventOffset: i32,
    pub firstEventTrailerOffset: i32,
    pub firstTextEventOffset: i32,
    pub firstFeatEventOffset: i32,
    pub numEvents: i32,
    pub numEntEvents: i32,
    pub numTextEvents: i32,
    pub numFeatEvents: i32,
    pub startTime: f32,
    pub totPlayTime: f32,
    pub todOffset: f32,
}

#[derive(Debug, Copy, Clone)]
pub struct AcmiEntityData {
    pub uniqueID: i32,
    pub kind: i32,
    pub count: i32,
    pub flags: i32,
    pub leadIndex: i32,
    pub slot: i32,
    pub specialFlags: i32,
    pub firstPositionDataOffset: i32,
    pub firstEventDataOffset: i32,
}

pub const PosTypePos: u8 = 0;
pub const PosTypeSwitch: u8 = 1;
pub const PosTypeDOF: u8 = 2;

#[derive(Debug, Copy, Clone)]
pub struct AcmiEntityPositionHeader {
    pub time: f32,
    pub kind: u8,
}

pub struct AcmiEntityPositionFooter {
    pub nextPositionUpdateOffset: i32,
    pub prevPositionUpdateOffset: i32,
}

#[derive(Debug, Copy, Clone)]
pub struct AcmiPosData {
    pub x: f32,
    pub y: f32,
    pub z: f32,
    pub pitch: f32,
    pub roll: f32,
    pub yaw: f32,
    pub radarTarget: i32,
}

#[derive(Debug, Copy, Clone)]
pub struct AcmiSwitchData {
    pub switchNum: i32,
    pub switchVal: i32,
    pub prevSwitchVal: i32,
}

#[derive(Debug, Copy, Clone)]
pub struct AcmiDOFData {
    pub DOFNum: i32,
    pub DOFVal: f32,
    pub prevDOFVal: f32,
}

#[derive(Copy, Clone)]
pub struct AcmiRawPositionData {
    pub kind: i32,
    pub uniqueID: i32,
    pub flags: i32,
    pub leadIndex: i32,
    pub slot: i32,
    pub specialFlags: i32,
}

#[derive(Debug, Copy, Clone)]
pub struct AcmiEventHeader {
    pub eventType: u8,
    pub index: i32,
    pub time: f32,
    pub timeEnd: f32,
    pub kind: i32,
    pub user: i32,
    pub flags: i32,
    pub scale: f32,
    pub x: f32,
    pub y: f32,
    pub z: f32,
    pub dx: f32,
    pub dy: f32,
    pub dz: f32,
    pub roll: f32,
    pub pitch: f32,
    pub yaw: f32,
}

#[derive(Debug, Copy, Clone)]
pub struct AcmiEventTrailer {
    pub timeEnd: f32,
    pub index: i32,
}

#[derive(Debug, Copy, Clone)]
pub struct AcmiFeatEvent {
    pub time: f32,
    pub index: i32,
    pub newStatus: i32,
    pub prevStatus: i32,
}

#[derive(Debug, Copy, Clone)]
pub struct AcmiFeatEventImportData {
    pub uniqueID: i32,
    pub data: AcmiFeatEvent,
}

#[derive(Debug, Copy, Clone)]
pub struct AcmiEntityReadHead {
    pub positionDataOffset: i32,
    pub eventDataOffset: i32,
}

#[derive(Debug, Copy, Clone)]
pub struct AcmiCallRec {
    pub label: [u8; 16usize],
    pub teamColor: i32,
}
