// generated by rust-bindgen 0.57.0, hacked down manually
//
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct ACMITapeHeader {
    pub fileID: i32,
    pub fileSize: i32,
    pub numEntities: i32,
    pub numFeat: i32,
    pub entityBlockOffset: i32,
    pub featBlockOffset: i32,
    pub numEntityPositions: i32,
    pub timelineBlockOffset: i32,
    pub firstEntEventOffset: i32,
    pub firstGeneralEventOffset: i32,
    pub firstEventTrailerOffset: i32,
    pub firstTextEventOffset: i32,
    pub firstFeatEventOffset: i32,
    pub numEvents: i32,
    pub numEntEvents: i32,
    pub numTextEvents: i32,
    pub numFeatEvents: i32,
    pub startTime: f32,
    pub totPlayTime: f32,
    pub todOffset: f32,
}

#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct ACMIEntityData {
    pub uniqueID: i32,
    pub type_: i32,
    pub count: i32,
    pub flags: i32,
    pub leadIndex: i32,
    pub slot: i32,
    pub specialFlags: i32,
    pub firstPositionDataOffset: i32,
    pub firstEventDataOffset: i32,
}

pub const PosTypePos: ::std::os::raw::c_uint = 0;
pub const PosTypeSwitch: ::std::os::raw::c_uint = 1;
pub const PosTypeDOF: ::std::os::raw::c_uint = 2;

#[repr(C, packed)]
#[derive(Copy, Clone)]
pub struct ACMIEntityPositionHeader {
    pub time: f32,
    pub type_: u8,
}

#[repr(C, packed)]
pub struct ACMIEntityPositionFooter {
    pub nextPositionUpdateOffset: i32,
    pub prevPositionUpdateOffset: i32,
}

#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct AcmiPosData {
    pub x: f32,
    pub y: f32,
    pub z: f32,
    pub pitch: f32,
    pub roll: f32,
    pub yaw: f32,
    pub radarTarget: i32,
}

#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct AcmiSwitchData {
    pub switchNum: i32,
    pub switchVal: i32,
    pub prevSwitchVal: i32,
}

#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct AcmiDOFData {
    pub DOFNum: i32,
    pub DOFVal: f32,
    pub prevDOFVal: f32,
}

#[repr(C, packed)]
#[derive(Copy, Clone)]
pub struct ACMIRawPositionData {
    pub type_: i32,
    pub uniqueID: i32,
    pub flags: i32,
    pub leadIndex: i32,
    pub slot: i32,
    pub specialFlags: i32,
}

#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct ACMIEventHeader {
    pub eventType: u8,
    pub index: i32,
    pub time: f32,
    pub timeEnd: f32,
    pub type_: i32,
    pub user: i32,
    pub flags: i32,
    pub scale: f32,
    pub x: f32,
    pub y: f32,
    pub z: f32,
    pub dx: f32,
    pub dy: f32,
    pub dz: f32,
    pub roll: f32,
    pub pitch: f32,
    pub yaw: f32,
}

#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct ACMIEventTrailer {
    pub timeEnd: f32,
    pub index: i32,
}

#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct ACMIFeatEvent {
    pub time: f32,
    pub index: i32,
    pub newStatus: i32,
    pub prevStatus: i32,
}

#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct ACMIFeatEventImportData {
    pub uniqueID: i32,
    pub data: ACMIFeatEvent,
}

#[derive(Debug, Copy, Clone)]
pub struct ACMIEntityReadHead {
    pub positionDataOffset: i32,
    pub eventDataOffset: i32,
}
